<?php

// Database connection
$servername = "localhost";
$username = "root";
$password = "";  //YOUR PASSWORD
$dbname = "test_db";

$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Function to log queries and execution times
function logQuery($query, $params, $executionTime, $message = "Normal Query") {
    $logfile = 'query_log.txt';
    $logEntry = "[" . date("Y-m-d H:i:s") . "] " . $message . " - Query: $query - Params: " . json_encode($params) . 
                " - Execution Time: " . number_format($executionTime, 6) . " seconds\n";
    file_put_contents($logfile, $logEntry, FILE_APPEND);
}

// Function to detect malicious input patterns including AND 1=1 and AND 1=0
function detectInjectionPattern($input) {
    $patterns = [
        '/\s*AND\s+1=1/i', // Detects the pattern 'AND 1=1' (Always TRUE)
        '/\s*AND\s+1=0/i', // Detects the pattern 'AND 1=0' (Always FALSE)
    ];

    foreach ($patterns as $pattern) {
        if (preg_match($pattern, $input)) {
            if (preg_match('/\s*AND\s+1=1/i', $input)) {
                return "TRUE"; // Detected 'AND 1=1' pattern
            } elseif (preg_match('/\s*AND\s+1=0/i', $input)) {
                return "FALSE"; // Detected 'AND 1=0' pattern
            }
        }
    }
    return false; // No malicious input detected
}

// Function to authenticate user
function getUser($username, $password) {
    global $conn;
    
    // Start recording the time
    $startTime = microtime(true);

    // SQL query
    $query = "SELECT * FROM users WHERE username = '$username' AND password = '$password';";

    echo "\nExecuting Query: " . $query . "\n";

    $result = $conn->query($query);
    $executionTime = microtime(true) - $startTime;
    // Log the query
    logQuery($query, ['username' => $username, 'password' => $password], $executionTime);

    if ($result && $result->num_rows > 0) {
        $user = $result->fetch_assoc();
        return $user; // Return user data if authenticated
    } else {
        return null; // No user found
    }
}

// Get username and password from the user
echo "Enter username: ";
$username = trim(fgets(STDIN));

echo "Enter password: ";
$password = trim(fgets(STDIN));

// Check for malicious input in username and password
$usernameResult = detectInjectionPattern($username);
$passwordResult = detectInjectionPattern($password);

if ($usernameResult !== false || $passwordResult !== false) {
    echo "\nSQL Injection Attack Detected. Malicious input blocked.\n";

    // Log the malicious query directly using the logQuery function
    $blockedQuery = "SELECT * FROM users WHERE username = '$username' AND password = '$password';";
    logQuery($blockedQuery, ['username' => $username, 'password' => $password], 0, "Malicious Query Blocked");

    // Notify the user
    if ($usernameResult !== false) {
        echo "\nMalicious username detected: $username - Result: $usernameResult\n";
    }

    if ($passwordResult !== false) {
        echo "\nMalicious password detected: $password - Result: $passwordResult\n";
    }

    // Simulate a blocked query without executing any harmful SQL
    echo "Blocked query: $blockedQuery\n";

    exit; // Stop further processing if malicious input is detected
}

$user = getUser($username, $password);

if ($user) {
    echo "\nLogin successful. Welcome, " . $user['username'] . ".\n";
} else {
    echo "\nInvalid username or password.\n";
}

$conn->close();
?>
